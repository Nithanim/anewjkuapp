apply plugin: 'com.android.application'
android {
    signingConfigs {
        config {
        }
    }
    compileSdkVersion 19
    buildToolsVersion "20.0.0"
    defaultConfig {
        applicationId "org.voidsink.anewjkuapp"
        minSdkVersion 14
        targetSdkVersion 19
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            applicationVariants.all { variant ->
                appendVersionNameVersionCode(variant, defaultConfig)
            }

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    packagingOptions {
        //exclude 'META-INF/DEPENDENCIES'
        //exclude 'META-INF/NOTICE'
        //exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        //exclude 'META-INF/ASL2.0'
    }
}

dependencies {
    compile 'de.cketti.library.changelog:ckchangelog:1.2.0'
    compile project(':voidsinkContributors')
    compile 'com.android.support:support-v4:20.0.0'
    compile 'com.github.japgolly.android:svg-android:2.0.5'
    compile 'com.google.android.gms:play-services:5.0.89'
    compile 'com.github.gabrielemariotti.cards:library:1.9.0'
    compile 'se.emilsjolander:stickylistheaders:2.5.0'
    compile 'com.google.android.apps.dashclock:dashclock-api:2.0.0'
    compile 'org.mnode.ical4j:ical4j:1.0.5.2'
    compile 'org.jsoup:jsoup:1.7.3'
    compile 'org.mapsforge:mapsforge-core:0.4.3'
    compile 'org.mapsforge:mapsforge-map:0.4.3'
    compile 'org.mapsforge:mapsforge-map-android:0.4.3'
    compile 'org.mapsforge:mapsforge-map-awt:0.4.3'
    compile 'org.mapsforge:mapsforge-map-reader:0.4.3'
    compile 'com.androidplot:androidplot-core:0.6.1'
}

def appendVersionNameVersionCode(variant, defaultConfig) {
    if(variant.zipAlign) {
        def file = variant.outputFile
        def fileName = file.name.replace(".apk", "-" + manifestVersionName() + ".apk")
        variant.outputFile = new File(file.parent, fileName)
    }

    def file = variant.packageApplication.outputFile
    def fileName = file.name.replace(".apk", "-" + manifestVersionName() + ".apk")
    variant.packageApplication.outputFile = new File(file.parent, fileName)
}

def manifestVersionName() {
    def manifestFile = file(project.projectDir.absolutePath + '/src/main/AndroidManifest.xml')
    def ns = new groovy.xml.Namespace("http://schemas.android.com/apk/res/android", "android")
    def xml = new XmlParser().parse(manifestFile)
    return xml.attributes()[ns.versionName].toString()
}